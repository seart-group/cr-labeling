<!DOCTYPE html>
<html lang="en">
    <%- include('./partials/head'); %>
    <body class="vh-100 vw-100 d-flex flex-column justify-content-between">
        <header>
            <% if (!!reviewer) { %>
                <nav class="navbar bg-light">
                    <div class="container-fluid">
                        <div>
                            <i class="bi bi-person-fill"></i>
                            <span class="navbar-brand mb-0 h1">
                                <%= reviewer.name %>
                            </span>
                        </div>
                    </div>
                </nav>
            <% } %>
        </header>
        <main>
            <% if (!!reviewer) { %>
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <h1 class="text-center m-3">Task: <%- instance.task %></h1>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col overflow-hidden">
                            <label class="mb-2">Input Source Code</label>
                            <pre class="border rounded"><code class="language-java"><%- instance.input_code || " "  %></code></pre>
                            <label class="mb-2">Input Comment</label>
                            <pre class="border rounded"><code class="language-plaintext"><%- instance.input_nl || " "  %></code></pre>
                        </div>
                        <div class="col-auto vr g-0"></div>
                        <div class="col overflow-hidden">
                            <% const language = instance.task === "C&NL2C" ? "java" : "plaintext" %>
                            <label class="mb-2">Actual Output</label>
                            <pre class="border rounded"><code class="language-<%- language %>"><%- instance.output || " "  %></code></pre>
                            <label class="mb-2">Expected Output</label>
                            <pre class="border rounded"><code class="language-<%- language %>"><%- instance.target || " " %></code></pre>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col text-end">
                            <button type="button"
                                    class="btn btn-primary"
                                    data-bs-toggle="offcanvas"
                                    data-bs-target="#label-offcanvas"
                                    aria-controls="label-offcanvas"
                                    autofocus
                            >
                                Label
                            </button>
                        </div>
                        <div class="col text-start">
                            <button type="button" class="btn btn-danger">
                                Discard
                            </button>
                        </div>
                    </div>
                    <div class="offcanvas offcanvas-end" tabindex="-1" id="label-offcanvas" aria-labelledby="label-offcanvas-title">
                        <div class="offcanvas-header">
                            <h5 class="offcanvas-title" id="label-offcanvas-title">Assign Labels</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                        </div>
                        <div class="offcanvas-body">
                            <label for="label-select" class="mb-2">
                                Select Labels
                            </label>
                            <select id="label-select" class="form-select mb-2" size="10" multiple>
                                <% labels.forEach(label => { %>
                                    <option value="<%- label.id %>"><%- label.name %></option>
                                <% }) %>
                            </select>
                            <p class="text-center text-muted user-select-none border rounded mb-2">
                                Hold <i class="bi bi-command"></i> to select multiple labels
                            </p>
                            <form id="label-add" class="mb-2">
                                <div class="input-group">
                                    <input type="text"
                                           id="label-add-input"
                                           class="form-control"
                                           placeholder="Define a new label..."
                                           aria-describedby="label-add-button"
                                           aria-label=""
                                           required
                                    />
                                    <button type="submit" id="label-add-button" class="btn btn-dark">
                                        Add!
                                    </button>
                                </div>
                            </form>
                            <div class="d-grid">
                                <button type="button" id="label-select-submit" class="btn btn-primary btn-lg">
                                    Label Instance!
                                </button>
                            </div>
                            <div class="toast-container position-fixed bottom-0 end-0 p-2">
                                <div id="label-add-toast"
                                     class="toast align-items-center text-bg-danger border border-danger"
                                     role="alert"
                                     aria-live="assertive"
                                     aria-atomic="true"
                                >
                                    <div class="d-flex">
                                        <div class="toast-body">
                                            Label already exists!
                                        </div>
                                        <button type="button"
                                                class="btn-close btn-close-white me-2 m-auto"
                                                data-bs-dismiss="toast"
                                                aria-label="Close"
                                        ></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            <% } else { %>
                <h1 class="text-center mb-3">
                    <i class="bi bi-emoji-dizzy-fill"></i>
                    You Must Log In First!
                </h1>
                <%- include('./partials/home-button'); %>
            <% } %>
        </main>
        <%- include('./partials/footer'); %>
        <%- include('./partials/scripts/general'); %>
        <%- include('./partials/scripts/hljs'); %>
        <script>
            const labelSelect = document.getElementById("label-select");
            const labelAddForm = document.getElementById("label-add");
            const labelAddInput = document.getElementById("label-add-input");
            const labelAddToast = document.getElementById("label-add-toast");

            const normalize = (label) => {
                return label.replaceAll(/\s+/g, " ").toLowerCase().trim();
            }

            const addOption = (data) => {
                const option = document.createElement("option");
                option.value = data.id;
                option.innerHTML = data.name;
                labelSelect.appendChild(option);
            }

            labelAddForm.addEventListener("submit", (event) => {
                event.preventDefault();
                const name = normalize(labelAddInput.value);
                labelAddInput.value = null;
                axios.post("/label", { name: name })
                    .then(({ label }) => addOption(label))
                    .catch(() => new bootstrap.Toast(labelAddToast).show());
            })

            const labelSelectRefresh = setInterval(async () => {
                const { data: labels } = await axios.get("/label");
                const options = labelSelect.options;
                labels.slice(options.length).forEach(label => addOption(label));
            }, 15000);

            window.addEventListener("beforeunload", () => clearInterval(labelSelectRefresh), false);
        </script>
    </body>
</html>