<%
    Array.prototype.union = function (other) {
        return Array.from(new Set(this.concat(other)));
    };

    Array.prototype.intersection = function (other) {
        return Array.from(new Set(this.filter((element) => other.includes(element))));
    };

    Array.prototype.difference = function (other) {
        return Array.from(new Set(this.filter((element) => !other.includes(element))));
    };

    Date.prototype.toHumanReadableString = function () {
        return this.toLocaleString('en-GB').replace(",", "");
    };

    const labels_union = reviews.map((review) => review.labels).reduce((l1, l2) => l1.union(l2));
    const labels_intersection = reviews.map((review) => review.labels).reduce((l1, l2) => l1.intersection(l2));
    const labels_difference = labels_union.difference(labels_intersection);
%>
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Code Review Labeling - Conflict Resolution</title>
        <%- include('./partials/head/meta'); %>
        <%- include('./partials/head/link'); %>
    </head>
    <body class="vh-100 vw-100 d-flex flex-column justify-content-between">
        <%- include('./partials/header'); %>
        <main>
            <div class="container">
                <%
                    let task_title;
                    switch (instance.task) {
                    case "C&NL2C":
                        task_title = "Code & Natural Language to Code";
                        break;
                    case "C2NL":
                        task_title = "Code to Natural Language";
                        break;
                    default:
                        task_title = "Unknown";
                    }
                %>
                <div class="row">
                    <div class="col d-flex justify-content-start">
                        <h1 class="mb-3" title="<%- task_title %>">
                            <%- instance.task %>
                        </h1>
                    </div>
                    <div class="col d-flex justify-content-end">
                        <span class="mb-3 h1">
                            <%- include('./partials/instance/category-icon', { category: instance.category }); %>
                        </span>
                    </div>
                </div>
                <div class="row">
                    <% const language = instance.task === "C&NL2C" ? "java" : "plaintext"; %>
                    <div class="col-12 col-md-6 col-lg overflow-hidden">
                        <label class="mb-2">Input Source Code</label>
                        <%-
                            include(
                                './partials/instance/code-display',
                                {
                                    language: "java",
                                    input: instance.input_code
                                }
                            );
                        %>
                        <label class="mb-2">Input Comment</label>
                        <%-
                            include(
                                './partials/instance/code-display',
                                {
                                    language: "plaintext",
                                    input: instance.input_nl
                                }
                            );
                        %>
                    </div>
                    <div class="col-12 col-md-6 col-lg overflow-hidden">
                        <label class="mb-2">Actual Output</label>
                        <%-
                            include(
                                './partials/instance/code-display',
                                {
                                    language: language,
                                    input: instance.output
                                }
                            );
                        %>
                        <label class="mb-2">Expected Output</label>
                        <%-
                            include(
                                './partials/instance/code-display',
                                {
                                    language: language,
                                    input: instance.target
                                }
                            );
                        %>
                    </div>
                    <div class="col-12 col-md-12 col-lg-3 overflow-hidden">
                        <label class="mb-2">Reviewers</label>
                        <div class="border rounded bg-light mb-3" style="max-height: 554px!important; overflow-y: scroll!important;">
                            <%
                                reviews.forEach((review) => {
                            %>
                                <div class="m-2">
                                    <div class="border rounded bg-white d-flex flex-column">
                                        <div class="p-2">
                                            <div>
                                                <i class="bi bi-person-fill"></i>
                                                <span><%- review.reviewer_name %></span>
                                            </div>
                                            <div>
                                                <i class="bi bi-eye-fill" title="Reviewed at"></i>
                                                <span><%- review.reviewed_at.toHumanReadableString() %></span>
                                            </div>
                                        </div>
                                        <div class="px-2">
                                            <%
                                                review.labels.forEach((label) => {
                                                    const text_bg_class = (labels_intersection.includes(label))
                                                            ? "text-bg-success"
                                                            : "text-bg-danger";
                                            %>
                                                <span title="<%- label %>"
                                                      class="
                                                      badge
                                                      rounded-pill
                                                      d-block
                                                      text-start
                                                      text-truncate
                                                      <%- text_bg_class %>
                                                      user-select-none
                                                      mb-1"
                                                >
                                                    <%- label %>
                                                </span>
                                            <%
                                                });
                                            %>
                                        </div>
                                        <div class="p-2">
                                            <%
                                                let category_inverse;
                                                switch (instance.category) {
                                                case "C":
                                                    category_inverse = "wrong";
                                                    break;
                                                case "W":
                                                    category_inverse = "correct";
                                                    break;
                                                default:
                                                    category_inverse = "???";
                                                }

                                                if (instance.category === "W") {
                                            %>
                                                Should be <%- category_inverse %>:
                                                <input type="checkbox"
                                                       class="form-check-input"
                                                       aria-label="Should be opposite category"
                                                       disabled
                                                       <%- (review.invert_category) ? "checked" : "" %>
                                                />
                                            <% } %>
                                        </div>
                                        <% if (review.remarks) { %>
                                            <label class="px-2" for="reviewer-<%- review.reviewer_id %>-remark">
                                                Remarks:
                                            </label>
                                            <div id="reviewer-<%- review.reviewer_id %>-remark" class="fst-italic p-2">
                                                "<%- review.remarks %>"
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            <% }); %>
                            <% discards.forEach((discard) => { %>
                                <div class="m-2">
                                    <div class="
                                        border
                                        border-danger
                                        rounded
                                        bg-danger
                                        bg-opacity-75
                                        text-white
                                        d-flex
                                        flex-column"
                                    >
                                        <div class="p-2">
                                            <div>
                                                <i class="bi bi-person-fill"></i>
                                                <span><%- discard.reviewer_name %></span>
                                            </div>
                                            <div>
                                                <i class="bi bi-eye-slash-fill" title="Discarded at"></i>
                                                <span><%- discard.discarded_at.toHumanReadableString() %></span>
                                            </div>
                                        </div>
                                        <% if (discard.remarks) { %>
                                            <label class="px-2" for="reviewer-<%- discard.reviewer_id %>-remark">
                                                Remarks:
                                            </label>
                                            <div id="reviewer-<%- discard.reviewer_id %>-remark" class="fst-italic p-2">
                                                "<%- discard.remarks %>"
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
                <div class="row gap-2 gap-md-0">
                    <div class="col-12 col-md-6 d-grid d-md-block text-md-end">
                        <button type="button"
                                class="btn btn-primary"
                                data-bs-toggle="offcanvas"
                                data-bs-target="#label-offcanvas"
                                aria-controls="label-offcanvas"
                                autofocus
                        >
                            Label
                        </button>
                    </div>
                    <div class="col-12 col-md-6 d-grid d-md-block text-md-start">
                        <button type="button"
                                class="btn btn-danger"
                                data-bs-toggle="offcanvas"
                                data-bs-target="#discard-offcanvas"
                                aria-controls="discard-offcanvas"
                        >
                            Discard
                        </button>
                    </div>
                </div>
                <div id="label-offcanvas"
                     class="offcanvas offcanvas-start"
                     aria-labelledby="label-offcanvas-title"
                     tabindex="-1"
                >
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="label-offcanvas-title">Assign Labels</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close">
                        </button>
                    </div>
                    <div class="offcanvas-body">
                        <form id="label-add" class="mb-2">
                            <div class="input-group">
                                <input type="text"
                                       id="label-add-input"
                                       class="form-control"
                                       placeholder="Define a new label..."
                                       aria-describedby="label-add-button"
                                       aria-label="New Label"
                                       required
                                />
                                <button type="submit" id="label-add-button" class="btn btn-dark">
                                    Add!
                                </button>
                            </div>
                        </form>
                        <input type="text"
                               id="label-filter"
                               class="form-control mb-2"
                               placeholder="Filter existing labels..."
                               aria-label="Filter Labels"
                        />
                        <form id="label-instance">
                            <select id="label-instance-select"
                                    class="form-select mb-2"
                                    aria-label="Assign Labels"
                                    size="10"
                                    multiple
                                    required
                            >
                                <%
                                    labels.forEach(label => {
                                        const agree = labels_intersection.includes(label.name);
                                        const disagree = labels_difference.includes(label.name);
                                        let label_class;
                                        if (agree) label_class = "agree";
                                        else if (disagree) label_class = "disagree";
                                        else label_class = "regular";
                                %>
                                    <option value="<%- label.id %>"
                                            <%- (agree) ? "selected" : "" %>
                                            class="option-<%- label_class %>"
                                    ><%- label.name %></option>
                                <%
                                    });
                                %>
                            </select>
                            <p class="text-center text-muted user-select-none border rounded mb-2">
                                Hold <i class="bi bi-command"></i> to select multiple labels
                            </p>
                            <div class="form-check mb-2">
                                <input id="label-instance-interesting"
                                       class="form-check-input"
                                       type="checkbox"
                                       value=""
                                />
                                <label for="label-instance-interesting" class="form-check-label">
                                    This instance is interesting
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input id="label-instance-invert"
                                       class="form-check-input"
                                       type="checkbox"
                                       value=""
                                        <%- (instance.category === "C") ? "disabled" : "" %>
                                />
                                <label for="label-instance-invert" class="form-check-label">
                                    This instance is actually correct
                                </label>
                            </div>
                            <div class="form-group mb-2">
                                <label for="label-instance-remarks">Remarks</label>
                                <textarea id="label-instance-remarks"
                                          class="form-control"
                                          style="resize: none"
                                          rows="10"
                                ></textarea>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary btn-lg">
                                    Label Instance!
                                </button>
                            </div>
                        </form>
                        <%-
                            include(
                                './partials/toast',
                                {
                                    id: "label-add-toast",
                                    body: "Label already exists!",
                                    variant: "danger"
                                }
                            )
                        %>
                    </div>
                </div>
                <div id="discard-offcanvas"
                     class="offcanvas offcanvas-end"
                     aria-labelledby="discard-offcanvas-title"
                >
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="discard-offcanvas-title">Provide Additional Information</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close">
                        </button>
                    </div>
                    <div class="offcanvas-body">
                        <form id="discard-instance">
                            <div class="form-group mb-2">
                                <div class="form-check">
                                    <input type="radio"
                                           id="discard-option-1"
                                           class="form-check-input"
                                           name="discard-option"
                                           value="1"
                                           required
                                    />
                                    <label id="discard-option-1-value"
                                           class="form-check-label"
                                           for="discard-option-1"
                                    >
                                        Revised code doesn't implement the reviewer's comment
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input type="radio"
                                           id="discard-option-2"
                                           class="form-check-input"
                                           name="discard-option"
                                           value="2"
                                           required
                                    />
                                    <label id="discard-option-2-value"
                                           class="form-check-label"
                                           for="discard-option-2"
                                    >
                                        Reviewer's comment is unclear even for a human given the context
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input type="radio"
                                           id="discard-option-3"
                                           class="form-check-input"
                                           name="discard-option"
                                           value="3"
                                           required
                                    />
                                    <label id="discard-option-3-value"
                                           class="form-check-label"
                                           for="discard-option-3"
                                    >
                                        Reviewer's comment is at class level
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input type="radio"
                                           id="discard-option-4"
                                           class="form-check-input"
                                           name="discard-option"
                                           value="4"
                                           required
                                    />
                                    <label id="discard-option-4-value"
                                           class="form-check-label"
                                           for="discard-option-4"
                                    >
                                        Reviewer's comment is not asking for a code change
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input type="radio"
                                           id="discard-option-5"
                                           class="form-check-input"
                                           name="discard-option"
                                           value="5"
                                           required
                                    />
                                    <label id="discard-option-5-value"
                                           class="form-check-label"
                                           for="discard-option-5"
                                    >
                                        Reviewer's comment is linked to a wrong code instance
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input type="radio"
                                           id="discard-option-other"
                                           class="form-check-input"
                                           name="discard-option"
                                           value="other"
                                           required
                                    />
                                    <label class="form-check-label" for="discard-option-other">
                                        Other:
                                    </label>
                                    <input type="text"
                                           id="discard-option-other-value"
                                           class="form-control"
                                           aria-label="Other Reason Input"
                                    />
                                </div>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-danger btn-lg">
                                    Discard Instance!
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                <%-
                    include(
                        './partials/toast',
                        {
                            id: "socket-disconnect-toast",
                            body: "Server connection lost!",
                            variant: "danger"
                        }
                    )
                %>
                <%-
                    include(
                        './partials/toast',
                        {
                            id: "socket-reconnect-toast",
                            body: "Server connection restored!",
                            variant: "success"
                        }
                    )
                %>
            </div>
        </main>
        <%- include('./partials/footer'); %>
        <%- include('./partials/scripts/general'); %>
        <%- include('./partials/scripts/hljs'); %>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            const socket = io();
            const instance_id = Number(`<%- instance.id %>`);
            const conflicts = JSON.parse('<%- JSON.stringify(instance.conflicts)%>');
            const labelFilter = document.getElementById("label-filter");
            const labelAddForm = document.getElementById("label-add");
            const labelAddInput = document.getElementById("label-add-input");
            const labelAddToast = document.getElementById("label-add-toast");
            const labelInstance = document.getElementById("label-instance");
            const labelInstanceSelect = document.getElementById("label-instance-select");
            const labelInstanceInteresting = document.getElementById("label-instance-interesting");
            const labelInstanceInvert = document.getElementById("label-instance-invert");
            const labelInstanceRemarks = document.getElementById("label-instance-remarks");
            const discardInstance = document.getElementById("discard-instance");
            const discardOptions = document.getElementsByName("discard-option");
            const discardOptionOther = document.getElementById("discard-option-other");
            const discardOptionOtherValue = document.getElementById("discard-option-other-value");
            const socketDisconnectToast = document.getElementById("socket-disconnect-toast");
            const socketReconnectToast = document.getElementById("socket-reconnect-toast");

            const redirect = () => window.location.replace("/conflicts");
            const toast = (element) => new bootstrap.Toast(element).show();

            const normalize = (name) => {
                return name.replaceAll(/\s+/g, " ").toLowerCase().trim();
            };

            // TODO: Use binary search as opposed to iterating over the options
            const addOption = (label) => {
                const search = normalize(labelFilter.value);
                const created_option = new Option(label.name, label.id);
                const created_option_classes = created_option.classList;
                if (!label.name.includes(search)) {
                    created_option_classes.add("d-none");
                }
                const existing_options = labelInstanceSelect.options;
                for (let idx = 0; idx < existing_options.length; idx++) {
                    const current_option = existing_options.item(idx);
                    if (created_option.innerHTML < current_option.innerHTML) {
                        labelInstanceSelect.insertBefore(created_option, current_option);
                        break;
                    } else if (idx === existing_options.length - 1) {
                        labelInstanceSelect.appendChild(created_option);
                    }
                }
            };

            labelFilter.addEventListener("input", () => {
                const search = normalize(labelFilter.value);
                const existing_options = labelInstanceSelect.options;
                for (let idx = 0; idx < existing_options.length; idx++) {
                    const current_option = existing_options.item(idx);
                    const current_option_classes = current_option.classList;
                    const label = current_option.innerHTML;
                    if (label.includes(search)) {
                        current_option_classes.remove("d-none");
                    } else {
                        current_option_classes.add("d-none");
                    }
                }
            });

            labelAddForm.addEventListener("submit", (event) => {
                event.preventDefault();
                const name = normalize(labelAddInput.value);
                labelAddInput.value = null;
                axios.post("/label", { name: name })
                    .then(({ data: label }) => {
                        addOption(label);
                        socket.emit("label_added", label);
                    })
                    .catch(() => toast(labelAddToast));
            });

            labelInstance.addEventListener("submit", (event) => {
                event.preventDefault();
                const selected = [ ...labelInstanceSelect.selectedOptions ].map(({ value }) => Number(value));
                const url = `/conflicts/${instance_id}/review`;
                const payload = {
                    conflicts: conflicts,
                    label_ids: selected,
                    is_interesting: labelInstanceInteresting.checked,
                    invert_category: labelInstanceInvert.checked,
                    remarks: labelInstanceRemarks.value || null
                };
                axios.post(url, payload).then(redirect);
            });

            discardOptionOther.addEventListener("change", () => {
                discardOptionOtherValue.required = true;
                discardOptionOtherValue.setAttribute("pattern", ".*\\S+.*");
            });

            [ ...discardOptions ].slice(0, -1).forEach((option) => {
                option.addEventListener("change", () => {
                    discardOptionOtherValue.required = false;
                    discardOptionOtherValue.removeAttribute("pattern");
                });
            });

            discardInstance.addEventListener("submit", (event) => {
                event.preventDefault();
                const [ selectedOption ] = [ ...discardOptions ].filter(option => option.checked)
                    .map(option => option.value);
                const target = document.getElementById(`discard-option-${selectedOption}-value`);
                const remarks = normalize((selectedOption === "other") ? target.value : target.innerHTML);
                const url = `/conflicts/${instance_id}/discard`;
                const payload = {
                    conflicts: conflicts,
                    remarks: remarks || null
                };
                axios.post(url, payload).then(redirect);
            });

            socket.on("label_append", (label) => addOption(label));
            socket.on("disconnect", () => toast(socketDisconnectToast));
            socket.io.on("reconnect", () => toast(socketReconnectToast));
        </script>
    </body>
</html>
